package com.example.demo.url;

import com.example.demo.user.User;
import jakarta.persistence.*;
import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.NoArgsConstructor;
import org.hibernate.annotations.CreationTimestamp;

import java.time.LocalDateTime;

/**
 * Represents a URL entity in the system.
 * This class maps to the "urls" table in the "url_shortener" schema.
 *
 * <p> The `Url` entity is annotated with {@link jakarta.persistence.Entity},
 * {@link jakarta.persistence.Table}, {@link jakarta.persistence.Id},
 * {@link jakarta.persistence.GeneratedValue}, {@link jakarta.persistence.GenerationType},
 * and lombok annotations {@link lombok.Data}, {@link lombok.AllArgsConstructor},
 * {@link lombok.NoArgsConstructor}, {@link lombok.Builder} to define the entity and
 * automatically generate standard methods. </p>
 *
 * <p> This class maintains a Many-to-One relationship with the {@link User} entity.
 * The `user` field denotes the user associated with this URL.
 * This relationship is eagerly fetched, meaning that data is loaded immediately
 * when accessing this field. </p>
 */
@Entity
@Table(schema = "url_shortener", name = "urls")
@Data
@AllArgsConstructor
@NoArgsConstructor
@Builder
public class Url {

    /**
     * Unique identifier for the URL entity.
     * Auto-generated by the database.
     */
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long id;

    /**
     * The original long URL that needs to be shortened.
     */
    @Column(name = "long_url", length = 2000, nullable = false)
    private String longUrl;

    /**
     * The shortened URL generated from the long URL.
     * This field must be unique across the system.
     */
    @Column(name = "short_url", length = 50, nullable = false, unique = true)
    private String shortUrl;

    /**
     * The number of visits this short URL has received.
     */
    @Column
    private long visits;

    @CreationTimestamp
    @Column(name = "created_at", nullable = false, updatable = false)
    private LocalDateTime createdAt;


    @Column(name = "expires_at")
    private LocalDateTime expiresAt;

    /**
     * The user associated with this URL.
     * Represents a Many-to-One relationship linking each URL to a User entity.
     */
    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "user_id")
    private User user;
}
